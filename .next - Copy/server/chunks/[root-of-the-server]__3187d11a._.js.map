{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/models/capAlertModel.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst capAlertSchema = new mongoose.Schema(\r\n  {\r\n    identifier: String,\r\n    sender: String,\r\n    sent: String,\r\n    status: String,\r\n    msgType: String,\r\n    scope: String,\r\n    source: String,\r\n    restriction: String,\r\n    addresses: String,\r\n    code: [String],\r\n    note: String,\r\n    references: String,\r\n    incidents: String,\r\n    info: [\r\n      {\r\n        language: String,\r\n        category: [String],\r\n        event: String,\r\n        responseType: [String],\r\n        urgency: String,\r\n        severity: String,\r\n        certainty: String,\r\n        audience: String,\r\n        eventCode: [\r\n          {\r\n            valueName: String,\r\n            value: String,\r\n          },\r\n        ],\r\n        effective: String,\r\n        onset: String,\r\n        expires: String,\r\n        senderName: String,\r\n        headline: String,\r\n        description: String,\r\n        instruction: String,\r\n        web: String,\r\n        contact: String,\r\n        parameter: [\r\n          {\r\n            valueName: String,\r\n            value: String,\r\n          },\r\n        ],\r\n        area: [\r\n          {\r\n            areaDesc: String,\r\n            polygon: [String],\r\n            circle: [String],\r\n            geocode: [\r\n              {\r\n                valueName: String,\r\n                value: String,\r\n              },\r\n            ],\r\n            altitude: String,\r\n            ceiling: String,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nexport default mongoose.models.CapAlert || mongoose.model('CapAlert', capAlertSchema);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAiB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACxC;IACE,YAAY;IACZ,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,QAAQ;IACR,aAAa;IACb,WAAW;IACX,MAAM;QAAC;KAAO;IACd,MAAM;IACN,YAAY;IACZ,WAAW;IACX,MAAM;QACJ;YACE,UAAU;YACV,UAAU;gBAAC;aAAO;YAClB,OAAO;YACP,cAAc;gBAAC;aAAO;YACtB,SAAS;YACT,UAAU;YACV,WAAW;YACX,UAAU;YACV,WAAW;gBACT;oBACE,WAAW;oBACX,OAAO;gBACT;aACD;YACD,WAAW;YACX,OAAO;YACP,SAAS;YACT,YAAY;YACZ,UAAU;YACV,aAAa;YACb,aAAa;YACb,KAAK;YACL,SAAS;YACT,WAAW;gBACT;oBACE,WAAW;oBACX,OAAO;gBACT;aACD;YACD,MAAM;gBACJ;oBACE,UAAU;oBACV,SAAS;wBAAC;qBAAO;oBACjB,QAAQ;wBAAC;qBAAO;oBAChB,SAAS;wBACP;4BACE,WAAW;4BACX,OAAO;wBACT;qBACD;oBACD,UAAU;oBACV,SAAS;gBACX;aACD;QACH;KACD;AACH,GACA;IAAE,YAAY;AAAK;uCAGN,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,YAAY","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/dbConnect.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"❌ Please define the MONGODB_URI environment variable in .env.local\");\r\n}\r\n\r\nlet cached = (global as any).mongoose;\r\n\r\nif (!cached) {\r\n  cached = (global as any).mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function dbConnect() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI, {\r\n      bufferCommands: false,\r\n    }).then((mongoose) => {\r\n      console.log(\"✅ MongoDB connected\");\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n\r\nexport default dbConnect;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,4CAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,4CAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC;YACP,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;IACF;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/rms/cap-alerts/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport mongoose from 'mongoose';\r\nimport CapAlert from '@/models/capAlertModel';\r\nimport dbConnect from '@/lib/dbConnect';\r\n\r\n// GET: Get all CAP Alerts\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    await dbConnect();\r\n    const alerts = await CapAlert.find().sort({ createdAt: -1 });\r\n    return NextResponse.json({ success: true, alerts });\r\n  } catch (error) {\r\n    console.error('Failed to fetch CAP alerts:', error);\r\n    return NextResponse.json({ success: false, message: 'Server Error' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// POST: Create a new CAP Alert\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    await dbConnect();\r\n    const data = await req.json();\r\n    const newAlert = await CapAlert.create(data);\r\n    return NextResponse.json({ success: true, alert: newAlert }, { status: 201 });\r\n  } catch (error) {\r\n    console.error('Failed to create CAP alert:', error);\r\n    return NextResponse.json({ success: false, message: 'Server Error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;;;;AAGO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QACd,MAAM,SAAS,MAAM,yHAAA,CAAA,UAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAO;IACnD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtF;AACF;AAGO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,WAAW,MAAM,yHAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,OAAO;QAAS,GAAG;YAAE,QAAQ;QAAI;IAC7E,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtF;AACF","debugId":null}}]
}