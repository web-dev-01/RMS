{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/dbConnect.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"❌ Please define the MONGODB_URI environment variable in .env.local\");\r\n}\r\n\r\nlet cached = (global as any).mongoose;\r\n\r\nif (!cached) {\r\n  cached = (global as any).mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function dbConnect() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI, {\r\n      bufferCommands: false,\r\n    }).then((mongoose) => {\r\n      console.log(\"✅ MongoDB connected\");\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n\r\nexport default dbConnect;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,4CAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,4CAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC;YACP,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;IACF;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/rms/platforms-devices/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport dbConnect from '@/lib/dbConnect';\r\nimport platformDeviceModel from '@/models/platformDeviceModel';\r\n\r\n// GET station's platform devices\r\nexport async function GET(_req: NextRequest, { params }: { params: { stationCode: string } }) {\r\n  try {\r\n    await dbConnect();\r\n    const data = await PlatformDevice.findOne({ stationCode: params.stationCode });\r\n    if (!data) {\r\n      return NextResponse.json({ success: false, message: 'Station not found' }, { status: 404 });\r\n    }\r\n    return NextResponse.json({ success: true, data });\r\n  } catch (err) {\r\n    return NextResponse.json({ success: false, message: 'Server Error' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// POST: Add/update platforms for a station\r\nexport async function POST(req: NextRequest, { params }: { params: { stationCode: string } }) {\r\n  try {\r\n    await dbConnect();\r\n    const body = await req.json(); // should be platform array\r\n    const { stationName, platforms } = body;\r\n\r\n    if (!stationName || !Array.isArray(platforms)) {\r\n      return NextResponse.json({ success: false, message: 'Invalid payload' }, { status: 400 });\r\n    }\r\n\r\n    const updated = await PlatformDevice.findOneAndUpdate(\r\n      { stationCode: params.stationCode },\r\n      { stationName, platforms },\r\n      { new: true, upsert: true } // create if doesn't exist\r\n    );\r\n\r\n    return NextResponse.json({ success: true, data: updated });\r\n  } catch (err) {\r\n    return NextResponse.json({ success: false, message: 'Server Error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAIO,eAAe,IAAI,IAAiB,EAAE,EAAE,MAAM,EAAuC;IAC1F,IAAI;QACF,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,eAAe,OAAO,CAAC;YAAE,aAAa,OAAO,WAAW;QAAC;QAC5E,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QAC3F;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtF;AACF;AAGO,eAAe,KAAK,GAAgB,EAAE,EAAE,MAAM,EAAuC;IAC1F,IAAI;QACF,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,IAAI,IAAI,IAAI,2BAA2B;QAC1D,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG;QAEnC,IAAI,CAAC,eAAe,CAAC,MAAM,OAAO,CAAC,YAAY;YAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACzF;QAEA,MAAM,UAAU,MAAM,eAAe,gBAAgB,CACnD;YAAE,aAAa,OAAO,WAAW;QAAC,GAClC;YAAE;YAAa;QAAU,GACzB;YAAE,KAAK;YAAM,QAAQ;QAAK,EAAE,0BAA0B;;QAGxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAQ;IAC1D,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtF;AACF","debugId":null}}]
}