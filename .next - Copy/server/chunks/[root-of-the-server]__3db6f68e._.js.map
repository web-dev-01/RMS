{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\r\n}\r\n\r\nlet cached = (global as any).mongoose;\r\n\r\nif (!cached) {\r\n  cached = (global as any).mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectToDB() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI, {\r\n      dbName: 'YourDBName', // optional if already in URI\r\n      bufferCommands: false,\r\n    }).then((mongoose) => {\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectToDB;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,4CAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,4CAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,QAAQ;YACR,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC;YACP,OAAO;QACT;IACF;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/models/User.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst UserSchema = new mongoose.Schema(\r\n  {\r\n    fullName: {\r\n      type: String,\r\n      required: [true, 'Full name is required'],\r\n      trim: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: [true, 'Email is required'],\r\n      unique: true,\r\n      lowercase: true,\r\n      trim: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: [true, 'Password is required'],\r\n      minlength: 6,\r\n    },\r\n    phoneNumber: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    role: {\r\n      type: String,\r\n      enum: ['Owner', 'Admin', 'Employee'],\r\n      default: 'Employee',\r\n    },\r\n    isVerified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    verificationCode: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\n// Prevent model overwrite issue in dev\r\nexport default mongoose.models.User || mongoose.model('User', UserSchema);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;QACzC,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAoB;QACrC,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;QACxC,WAAW;IACb;IACA,aAAa;QACX,MAAM;QACN,MAAM;IACR;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAS;YAAS;SAAW;QACpC,SAAS;IACX;IACA,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,kBAAkB;QAChB,MAAM;QACN,SAAS;IACX;AACF,GACA;IACE,YAAY;AACd;uCAIa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/utils/generateToken.ts"],"sourcesContent":["import jwt from 'jsonwebtoken';\r\n\r\nexport const generateToken = (email: string) => {\r\n  return jwt.sign({ email }, process.env.JWT_SECRET!, { expiresIn: '1h' });\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,gBAAgB,CAAC;IAC5B,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE;IAAM,GAAG,QAAQ,GAAG,CAAC,UAAU,EAAG;QAAE,WAAW;IAAK;AACxE","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/auth/login/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport bcrypt from 'bcryptjs';\r\nimport connectToDB from '@/lib/db';\r\nimport User from '@/models/User';\r\nimport { generateToken } from '@/utils/generateToken';\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    await connectToDB();\r\n    const { email, password } = await req.json();\r\n\r\n    if (!email || !password) {\r\n      return NextResponse.json({ success: false, message: 'All fields are required' }, { status: 400 });\r\n    }\r\n\r\n    const user = await User.findOne({ email });\r\n    if (!user) {\r\n      return NextResponse.json({ success: false, message: 'Invalid email or password' }, { status: 400 });\r\n    }\r\n\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch) {\r\n      return NextResponse.json({ success: false, message: 'Invalid email or password' }, { status: 400 });\r\n    }\r\n\r\n    if (!user.isVerified) {\r\n      return NextResponse.json({ success: false, message: 'Please verify your email first' }, { status: 400 });\r\n    }\r\n\r\n    const token = generateToken(user._id);\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: 'Login successful',\r\n      token,\r\n      user: {\r\n        id: user._id,\r\n        email: user.email,\r\n        fullName: user.fullName,\r\n        role: user.role,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Login Error:', error);\r\n    return NextResponse.json({ success: false, message: 'Something went wrong' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAW,AAAD;QAChB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QACjG;QAEA,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QACxC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAC5D,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnG;QAEA,IAAI,CAAC,KAAK,UAAU,EAAE;YACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QACxG;QAEA,MAAM,QAAQ,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,GAAG;QAEpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT;YACA,MAAM;gBACJ,IAAI,KAAK,GAAG;gBACZ,OAAO,KAAK,KAAK;gBACjB,UAAU,KAAK,QAAQ;gBACvB,MAAM,KAAK,IAAI;YACjB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9F;AACF","debugId":null}}]
}