{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/db.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\r\n}\r\n\r\nlet cached = (global as any).mongoose;\r\n\r\nif (!cached) {\r\n  cached = (global as any).mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function connectToDB() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI, {\r\n      dbName: 'YourDBName', // optional if already in URI\r\n      bufferCommands: false,\r\n    }).then((mongoose) => {\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectToDB;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,4CAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,4CAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,QAAQ;YACR,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC;YACP,OAAO;QACT;IACF;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/models/User.ts"],"sourcesContent":["import mongoose, { Schema, models } from 'mongoose';\r\n\r\nconst userSchema = new Schema(\r\n  {\r\n    fullName: { type: String, required: true },\r\n    email: { type: String, required: true, unique: true },\r\n    password: { type: String, required: true },\r\n    role: {\r\n      type: String,\r\n      enum: ['Admin', 'user', 'Owner'],\r\n      default: 'Employee',\r\n    },\r\n    isVerified: { type: Boolean, default: false },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst User = models.User || mongoose.model('User', userSchema);\r\nexport default User;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAS;YAAQ;SAAQ;QAChC,SAAS;IACX;IACA,YAAY;QAAE,MAAM;QAAS,SAAS;IAAM;AAC9C,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,OAAO,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCACpC","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/auth/login/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport bcrypt from 'bcryptjs';\r\nimport jwt from 'jsonwebtoken';\r\nimport connectDB from '@/lib/db';\r\nimport User from '@/models/User';\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET || 'default_secret';\r\n\r\nexport async function POST(req: Request) {\r\n  await connectDB();\r\n  const { email, password } = await req.json();\r\n\r\n  try {\r\n    const user = await User.findOne({ email });\r\n    if (!user) {\r\n      return NextResponse.json({ message: 'Invalid email or password' }, { status: 401 });\r\n    }\r\n\r\n    const isMatch = await bcrypt.compare(password, user.password);\r\n    if (!isMatch) {\r\n      return NextResponse.json({ message: 'Invalid email or password' }, { status: 401 });\r\n    }\r\n\r\n    const token = jwt.sign(\r\n      { id: user._id, email: user.email, role: user.role },\r\n      JWT_SECRET,\r\n      { expiresIn: '7d' }\r\n    );\r\n\r\n    return NextResponse.json(\r\n      {\r\n        token,\r\n        user: {\r\n          id: user._id,\r\n          name: user.fullName,\r\n          email: user.email,\r\n          role: user.role,\r\n        },\r\n      },\r\n      { status: 200 }\r\n    );\r\n  } catch (err) {\r\n    console.error('Login Error:', err);\r\n    return NextResponse.json({ message: 'Login failed' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU,IAAI;AAEtC,eAAe,KAAK,GAAY;IACrC,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAE1C,IAAI;QACF,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QACxC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAC5D,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CACpB;YAAE,IAAI,KAAK,GAAG;YAAE,OAAO,KAAK,KAAK;YAAE,MAAM,KAAK,IAAI;QAAC,GACnD,YACA;YAAE,WAAW;QAAK;QAGpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE;YACA,MAAM;gBACJ,IAAI,KAAK,GAAG;gBACZ,MAAM,KAAK,QAAQ;gBACnB,OAAO,KAAK,KAAK;gBACjB,MAAM,KAAK,IAAI;YACjB;QACF,GACA;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF","debugId":null}}]
}