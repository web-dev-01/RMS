{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/dbConnect.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"❌ Please define the MONGODB_URI environment variable in .env.local\");\r\n}\r\n\r\nlet cached = (global as any).mongoose;\r\n\r\nif (!cached) {\r\n  cached = (global as any).mongoose = { conn: null, promise: null };\r\n}\r\n\r\nasync function dbConnect() {\r\n  if (cached.conn) {\r\n    return cached.conn;\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI, {\r\n      bufferCommands: false,\r\n    }).then((mongoose) => {\r\n      console.log(\"✅ MongoDB connected\");\r\n      return mongoose;\r\n    });\r\n  }\r\n\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n\r\nexport default dbConnect;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,4CAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,4CAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC;YACP,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT;IACF;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/models/User.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst UserSchema = new mongoose.Schema(\r\n  {\r\n    fullName: {\r\n      type: String,\r\n      required: [true, 'Full name is required'],\r\n      trim: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: [true, 'Email is required'],\r\n      unique: true,\r\n      lowercase: true,\r\n      trim: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: [true, 'Password is required'],\r\n      minlength: [6, 'Password must be at least 6 characters'],\r\n    },\r\n    phoneNumber: {\r\n      type: String,\r\n      trim: true,\r\n      match: [/^\\+?\\d{10,15}$/, 'Please enter a valid phone number (e.g., +919876543210)'],\r\n    },\r\n    image: {\r\n      type: String, // URL of the profile picture\r\n      default: null,\r\n    },\r\n    role: {\r\n      type: String,\r\n      enum: ['User', 'Admin'],\r\n      default: 'User',\r\n    },\r\n    isVerified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    verificationCode: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\n// Prevent model overwrite issue in dev\r\nexport default mongoose.models.User || mongoose.model('User', UserSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;QACzC,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAoB;QACrC,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;QACxC,WAAW;YAAC;YAAG;SAAyC;IAC1D;IACA,aAAa;QACX,MAAM;QACN,MAAM;QACN,OAAO;YAAC;YAAkB;SAA0D;IACtF;IACA,OAAO;QACL,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAQ;SAAQ;QACvB,SAAS;IACX;IACA,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,kBAAkB;QAChB,MAAM;QACN,SAAS;IACX;AACF,GACA;IACE,YAAY;AACd;uCAIa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/user-profile/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport dbConnect from '@/lib/dbConnect';\r\nimport User from '@/models/User';\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    await dbConnect();\r\n\r\n    // Remove email check - fetch based on token or return error\r\n    return NextResponse.json({ success: false, message: 'Email check removed. Use token-based auth instead.' }, { status: 400 });\r\n  } catch (error) {\r\n    console.error('Profile Fetch Error:', error);\r\n    return NextResponse.json({ success: false, message: 'Internal Server Error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    await dbConnect();\r\n    const { fullName, phoneNumber, image } = await req.json();\r\n\r\n    // Assume user is already authenticated and attached in middleware\r\n    // e.g., req.user = { id, email } from JWT or session\r\n\r\n    // For now, let's use dummy user id (in real use, get from token/session)\r\n    const userId = 'hardcoded_or_from_token';\r\n\r\n    const user = await User.findById(userId);\r\n    if (!user) {\r\n      return NextResponse.json({ success: false, message: 'User not found' }, { status: 404 });\r\n    }\r\n\r\n    if (fullName) user.fullName = fullName;\r\n    if (phoneNumber) user.phoneNumber = phoneNumber;\r\n    if (image) user.image = image;\r\n\r\n    await user.save();\r\n\r\n    return NextResponse.json({ success: true, message: 'Profile updated successfully' });\r\n  } catch (error) {\r\n    console.error('Profile Completion Error:', error);\r\n    return NextResponse.json({ success: false, message: 'Internal Server Error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QAEd,4DAA4D;QAC5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAqD,GAAG;YAAE,QAAQ;QAAI;IAC5H,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,CAAA,GAAA,kHAAA,CAAA,UAAS,AAAD;QACd,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAEvD,kEAAkE;QAClE,qDAAqD;QAErD,yEAAyE;QACzE,MAAM,SAAS;QAEf,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxF;QAEA,IAAI,UAAU,KAAK,QAAQ,GAAG;QAC9B,IAAI,aAAa,KAAK,WAAW,GAAG;QACpC,IAAI,OAAO,KAAK,KAAK,GAAG;QAExB,MAAM,KAAK,IAAI;QAEf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,SAAS;QAA+B;IACpF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF","debugId":null}}]
}