{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/db.ts"],"sourcesContent":["// lib/db.ts\r\nimport mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI || '';\r\n\r\nif (!MONGODB_URI) throw new Error('Please define the MONGODB_URI in .env');\r\n\r\nlet cached = (global as any).mongoose || { conn: null, promise: null };\r\n\r\nasync function connectDB() {\r\n  if (cached.conn) return cached.conn;\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI, {\r\n      bufferCommands: false,\r\n    }).then((mongoose) => mongoose);\r\n  }\r\n\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n\r\nexport default connectDB;\r\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAE/C,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;AAElC,IAAI,SAAS,4CAAgB,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAErE,eAAe;IACb,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC,WAAa;IACxB;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/models/User.ts"],"sourcesContent":["// models/User.ts\r\nimport mongoose, { Schema, Document } from 'mongoose';\r\n\r\nexport interface IUser extends Document {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>({\r\n  name: { type: String, required: true },\r\n  email: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n});\r\n\r\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAQA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAQ;IACnC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC3C;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/auth/register/route.ts"],"sourcesContent":["// app/api/auth/register/route.ts\r\nimport { NextResponse } from 'next/server';\r\nimport bcrypt from 'bcryptjs';\r\nimport connectDB from '@/lib/db';\r\nimport User from '@/models/User';\r\n\r\nexport async function POST(req: Request) {\r\n  await connectDB();\r\n  const { name, email, password } = await req.json();\r\n\r\n  try {\r\n    const userExists = await User.findOne({ email });\r\n    if (userExists) {\r\n      return NextResponse.json({ message: 'User already exists' }, { status: 400 });\r\n    }\r\n\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n    const newUser = await User.create({ name, email, password: hashedPassword });\r\n\r\n    return NextResponse.json({ message: 'User created successfully' }, { status: 201 });\r\n  } catch (err) {\r\n    return NextResponse.json({ message: 'Registration failed' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AACjC;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,CAAA,GAAA,2GAAA,CAAA,UAAS,AAAD;IACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAEhD,IAAI;QACF,MAAM,aAAa,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAC9C,IAAI,YAAY;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QACnD,MAAM,UAAU,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;YAAE;YAAM;YAAO,UAAU;QAAe;QAE1E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4B,GAAG;YAAE,QAAQ;QAAI;IACnF,EAAE,OAAO,KAAK;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}