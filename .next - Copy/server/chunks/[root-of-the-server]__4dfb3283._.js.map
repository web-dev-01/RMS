{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/rms/event-logs/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { connectDB } from '@/lib/db';\r\nimport { EventLog } from '@/lib/models/eventLogModel';\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    await connectDB();\r\n    const logs = await EventLog.find().sort({ Timestamp: -1 });\r\n    return NextResponse.json(logs, { status: 200 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Failed to fetch logs' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    await connectDB();\r\n    const data = await req.json();\r\n    const newLog = new EventLog(data);\r\n    await newLog.save();\r\n    return NextResponse.json(newLog, { status: 201 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Failed to save log' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;AAIO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM;QACN,MAAM,OAAO,MAAM,SAAS,IAAI,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM;QACN,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,SAAS,IAAI,SAAS;QAC5B,MAAM,OAAO,IAAI;QACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAAE,QAAQ;QAAI;IACjD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1E;AACF","debugId":null}}]
}