{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/models/User.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst UserSchema = new mongoose.Schema(\r\n  {\r\n    fullName: {\r\n      type: String,\r\n      required: [true, 'Full name is required'],\r\n      trim: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: [true, 'Email is required'],\r\n      unique: true,\r\n      lowercase: true,\r\n      trim: true,\r\n    },\r\n    password: {\r\n      type: String,\r\n      required: [true, 'Password is required'],\r\n      minlength: [6, 'Password must be at least 6 characters'],\r\n    },\r\n    phoneNumber: {\r\n      type: String,\r\n      trim: true,\r\n      match: [/^\\+?\\d{10,15}$/, 'Please enter a valid phone number (e.g., +919876543210)'],\r\n    },\r\n    image: {\r\n      type: String, // URL of the profile picture\r\n      default: null,\r\n    },\r\n    role: {\r\n      type: String,\r\n      enum: ['User', 'Admin'],\r\n      default: 'User',\r\n    },\r\n    isVerified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    verificationCode: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\n// Prevent model overwrite issue in dev\r\nexport default mongoose.models.User || mongoose.model('User', UserSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CACpC;IACE,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAwB;QACzC,MAAM;IACR;IACA,OAAO;QACL,MAAM;QACN,UAAU;YAAC;YAAM;SAAoB;QACrC,QAAQ;QACR,WAAW;QACX,MAAM;IACR;IACA,UAAU;QACR,MAAM;QACN,UAAU;YAAC;YAAM;SAAuB;QACxC,WAAW;YAAC;YAAG;SAAyC;IAC1D;IACA,aAAa;QACX,MAAM;QACN,MAAM;QACN,OAAO;YAAC;YAAkB;SAA0D;IACtF;IACA,OAAO;QACL,MAAM;QACN,SAAS;IACX;IACA,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAQ;SAAQ;QACvB,SAAS;IACX;IACA,YAAY;QACV,MAAM;QACN,SAAS;IACX;IACA,kBAAkB;QAChB,MAAM;QACN,SAAS;IACX;AACF,GACA;IACE,YAAY;AACd;uCAIa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/user-profile/route.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\nimport { NextResponse } from 'next/server';\r\nimport { getServerSession } from 'next-auth/next';\r\nimport User from '../../../models/User'; // Adjust path to your User model\r\nimport { authOptions } from '../auth/[...nextauth]/route'; // Adjust path to your NextAuth config\r\n\r\nexport async function GET(req: Request) {\r\n  try {\r\n    if (!mongoose.connection.readyState) {\r\n      await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/ipips');\r\n    }\r\n    const session = await getServerSession(authOptions);\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json({ message: 'Unauthorized' }, { status: 401 });\r\n    }\r\n    const user = await User.findOne({ email: session.user.email }).select('fullName phoneNumber image');\r\n    if (!user) {\r\n      return NextResponse.json({ message: 'User not found' }, { status: 404 });\r\n    }\r\n    return NextResponse.json({ user });\r\n  } catch (error) {\r\n    console.error('Error fetching profile:', error);\r\n    return NextResponse.json({ message: 'Server error' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function PUT(req: Request) {\r\n  try {\r\n    if (!mongoose.connection.readyState) {\r\n      await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/ipips');\r\n    }\r\n    const session = await getServerSession(authOptions);\r\n    if (!session?.user?.email) {\r\n      return NextResponse.json({ message: 'Unauthorized' }, { status: 401 });\r\n    }\r\n    const { fullName, phoneNumber, image } = await req.json();\r\n    if (!fullName || !phoneNumber) {\r\n      return NextResponse.json({ message: 'Full name and phone number are required' }, { status: 400 });\r\n    }\r\n    if (!/^\\+?\\d{10,15}$/.test(phoneNumber)) {\r\n      return NextResponse.json({ message: 'Invalid phone number' }, { status: 400 });\r\n    }\r\n    const updatedUser = await User.findOneAndUpdate(\r\n      { email: session.user.email },\r\n      { fullName, phoneNumber, image, isVerified: true },\r\n      { new: true, runValidators: true }\r\n    );\r\n    if (!updatedUser) {\r\n      return NextResponse.json({ message: 'User not found' }, { status: 404 });\r\n    }\r\n    return NextResponse.json({ message: 'Profile updated successfully', user: updatedUser });\r\n  } catch (error) {\r\n    console.error('Error updating profile:', error);\r\n    return NextResponse.json({ message: 'Server error' }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;AAEA,qMAAyC,iCAAiC;;;;;;;;;;;AAGnE,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,IAAI,CAAC,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,EAAE;YACnC,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI;QACpD;QACA,MAAM,UAAU,MAAM,iBAAiB;QACvC,IAAI,CAAC,SAAS,MAAM,OAAO;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACtE;QACA,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE,OAAO,QAAQ,IAAI,CAAC,KAAK;QAAC,GAAG,MAAM,CAAC;QACtE,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAK;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF;AAEO,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,IAAI,CAAC,yGAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,UAAU,EAAE;YACnC,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,IAAI;QACpD;QACA,MAAM,UAAU,MAAM,iBAAiB;QACvC,IAAI,CAAC,SAAS,MAAM,OAAO;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACtE;QACA,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QACvD,IAAI,CAAC,YAAY,CAAC,aAAa;YAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA0C,GAAG;gBAAE,QAAQ;YAAI;QACjG;QACA,IAAI,CAAC,iBAAiB,IAAI,CAAC,cAAc;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAuB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QACA,MAAM,cAAc,MAAM,gHAAA,CAAA,UAAI,CAAC,gBAAgB,CAC7C;YAAE,OAAO,QAAQ,IAAI,CAAC,KAAK;QAAC,GAC5B;YAAE;YAAU;YAAa;YAAO,YAAY;QAAK,GACjD;YAAE,KAAK;YAAM,eAAe;QAAK;QAEnC,IAAI,CAAC,aAAa;YAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAgC,MAAM;QAAY;IACxF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAe,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF","debugId":null}}]
}