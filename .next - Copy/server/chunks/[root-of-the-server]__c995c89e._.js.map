{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/lib/mongodb.ts"],"sourcesContent":["// lib/mongodb.ts\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst uri = process.env.MONGODB_URI!;\r\nconst options = {};\r\n\r\nlet client: MongoClient;\r\nlet clientPromise: Promise<MongoClient>;\r\n\r\nif (!process.env.MONGODB_URI) {\r\n  throw new Error(\"Please add your Mongo URI to .env.local\");\r\n}\r\n\r\nclient = new MongoClient(uri, options);\r\nclientPromise = client.connect();\r\n\r\nexport default clientPromise;\r\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAEA,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;AACnC,MAAM,UAAU,CAAC;AAEjB,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE;IAC5B,MAAM,IAAI,MAAM;AAClB;AAEA,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC,KAAK;AAC9B,gBAAgB,OAAO,OAAO;uCAEf","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/api/rms/event-logs/route.ts"],"sourcesContent":["// app/api/rms/event-logs/route.ts\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport clientPromise from '@/lib/mongodb';\r\n\r\nexport async function GET() {\r\n  try {\r\n    const client = await clientPromise;\r\n    const db = client.db(); // default DB\r\n    const logs = await db.collection('event_logs').find().toArray();\r\n\r\n    return NextResponse.json(logs);\r\n  } catch (error) {\r\n    console.error('GET error:', error);\r\n    return NextResponse.json({ message: 'Failed to fetch logs' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const body = await req.json();\r\n\r\n    if (\r\n      !body.eventID ||\r\n      !body.eventType ||\r\n      !body.source ||\r\n      !body.description\r\n    ) {\r\n      return NextResponse.json({ message: 'Missing fields' }, { status: 400 });\r\n    }\r\n\r\n    const client = await clientPromise;\r\n    const db = client.db();\r\n    const newLog = {\r\n      ...body,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    const result = await db.collection('event_logs').insertOne(newLog);\r\n    return NextResponse.json({ insertedId: result.insertedId });\r\n  } catch (error) {\r\n    console.error('POST error:', error);\r\n    return NextResponse.json({ message: 'Failed to add log' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAElC;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE,IAAI,aAAa;QACrC,MAAM,OAAO,MAAM,GAAG,UAAU,CAAC,cAAc,IAAI,GAAG,OAAO;QAE7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,IACE,CAAC,KAAK,OAAO,IACb,CAAC,KAAK,SAAS,IACf,CAAC,KAAK,MAAM,IACZ,CAAC,KAAK,WAAW,EACjB;YACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QAEA,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAa;QAClC,MAAM,KAAK,OAAO,EAAE;QACpB,MAAM,SAAS;YACb,GAAG,IAAI;YACP,WAAW,IAAI,OAAO,WAAW;QACnC;QAEA,MAAM,SAAS,MAAM,GAAG,UAAU,CAAC,cAAc,SAAS,CAAC;QAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,YAAY,OAAO,UAAU;QAAC;IAC3D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAoB,GAAG;YAAE,QAAQ;QAAI;IAC3E;AACF","debugId":null}}]
}