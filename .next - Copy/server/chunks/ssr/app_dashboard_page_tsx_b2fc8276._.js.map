{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/dashboard/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Grid,\r\n  Container,\r\n  Chip,\r\n  Avatar,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport {\r\n  LocationCity,\r\n  Train,\r\n  Terminal,\r\n  Assignment,\r\n  Security,\r\n  Refresh,\r\n  ArrowForward,\r\n  Settings,\r\n} from '@mui/icons-material';\r\nimport { useRouter } from 'next/navigation';\r\nimport Cookies from 'js-cookie';\r\n\r\n// Professional color palette\r\nconst primaryColor = '#1B4332'; // Dark Green\r\nconst accentColor = '#40916C'; // Success Green\r\nconst backgroundColor = '#0D1117'; // Dark Background\r\nconst cardBackground = '#161B22'; // Card Background\r\nconst tableHeaderBg = '#21262D';\r\nconst textPrimary = '#F0F6FC';\r\nconst textSecondary = '#8B949E';\r\nconst successColor = '#40916C';\r\nconst errorColor = '#D73A49';\r\nconst warningColor = '#F85149';\r\n\r\nexport default function ProfessionalDashboard() {\r\n  const router = useRouter();\r\n  const [lastUpdated, setLastUpdated] = useState(new Date());\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  \r\n  // State for API data\r\n  const [activeTrains, setActiveTrains] = useState([]);\r\n  const [systemLogs, setSystemLogs] = useState([]);\r\n  const [platforms, setPlatforms] = useState([]);\r\n  const [capAlerts, setCapAlerts] = useState([]);\r\n  const [stationInfo, setStationInfo] = useState({\r\n    code: 'CST-001',\r\n    name: 'Central Railway Station',\r\n    zone: 'Central Railway',\r\n    platforms: 10,\r\n    status: 'Operational'\r\n  });\r\n\r\n  // Fetch data from APIs\r\n  useEffect(() => {\r\n    fetchActiveTrains();\r\n    fetchSystemLogs();\r\n    fetchPlatforms();\r\n    fetchCapAlerts();\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  const fetchActiveTrains = async () => {\r\n    try {\r\n      // Replace with actual API call\r\n      // const response = await fetch('/api/active-trains');\r\n      // const data = await response.json();\r\n      \r\n      // Mock data for now\r\n      setActiveTrains([\r\n        { id: 'T001', name: 'Rajdhani Express', route: 'Delhi - Mumbai', platform: '1', status: 'On Time', arrival: '14:30', departure: '14:35' },\r\n        { id: 'T002', name: 'Shatabdi Express', route: 'Mumbai - Pune', platform: '3', status: 'Delayed', arrival: '15:45', departure: '15:50' },\r\n        { id: 'T003', name: 'Duronto Express', route: 'Kolkata - Delhi', platform: '5', status: 'On Time', arrival: '16:20', departure: '16:25' },\r\n        { id: 'T004', name: 'Gatiman Express', route: 'Delhi - Agra', platform: '2', status: 'Boarding', arrival: '17:15', departure: '17:18' },\r\n        { id: 'T005', name: 'Vande Bharat', route: 'Delhi - Varanasi', platform: '4', status: 'On Time', arrival: '18:30', departure: '18:35' },\r\n        { id: 'T006', name: 'Jan Shatabdi', route: 'Mumbai - Nashik', platform: '6', status: 'On Time', arrival: '19:45', departure: '19:48' },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Failed to fetch active trains:', error);\r\n    }\r\n  };\r\n\r\n  const fetchSystemLogs = async () => {\r\n    try {\r\n      // Replace with actual API call\r\n      // const response = await fetch('/api/system-logs');\r\n      // const data = await response.json();\r\n      \r\n      // Mock data for now\r\n      setSystemLogs([\r\n        { id: 1, timestamp: '14:25:32', event: 'Display refresh completed on Platform 3', type: 'System', severity: 'info' },\r\n        { id: 2, timestamp: '14:23:15', event: 'Audio system malfunction on Platform 7', type: 'Alert', severity: 'warning' },\r\n        { id: 3, timestamp: '14:20:45', event: 'Rajdhani Express arrived at Platform 1', type: 'Train', severity: 'success' },\r\n        { id: 4, timestamp: '14:18:22', event: 'LED display restored on Platform 5', type: 'Device', severity: 'success' },\r\n        { id: 5, timestamp: '14:15:10', event: 'Network connectivity restored', type: 'System', severity: 'info' },\r\n        { id: 6, timestamp: '14:12:33', event: 'Cleaning crew dispatched to Platform 2', type: 'Alert', severity: 'info' },\r\n        { id: 7, timestamp: '14:10:18', event: 'Shatabdi Express delayed by 10 minutes', type: 'Train', severity: 'warning' },\r\n        { id: 8, timestamp: '14:08:45', event: 'Platform 8 announcement system tested', type: 'Device', severity: 'info' },\r\n        { id: 9, timestamp: '14:05:12', event: 'Automatic backup initiated', type: 'System', severity: 'info' },\r\n        { id: 10, timestamp: '14:02:30', event: 'CCTV camera maintenance completed', type: 'Security', severity: 'success' },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Failed to fetch system logs:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPlatforms = async () => {\r\n    try {\r\n      // Replace with actual API call\r\n      // const response = await fetch('/api/platforms');\r\n      // const data = await response.json();\r\n      \r\n      // Mock data for now\r\n      setPlatforms([\r\n        { number: '1', train: 'Rajdhani Express', ledDisplay: 'Online', audioSystem: 'Online', status: 'Active' },\r\n        { number: '2', train: 'Gatiman Express', ledDisplay: 'Online', audioSystem: 'Online', status: 'Active' },\r\n        { number: '3', train: 'Shatabdi Express', ledDisplay: 'Online', audioSystem: 'Offline', status: 'Active' },\r\n        { number: '4', train: 'Vande Bharat', ledDisplay: 'Maintenance', audioSystem: 'Online', status: 'Active' },\r\n        { number: '5', train: 'Duronto Express', ledDisplay: 'Online', audioSystem: 'Online', status: 'Active' },\r\n        { number: '6', train: 'Jan Shatabdi', ledDisplay: 'Online', audioSystem: 'Online', status: 'Active' },\r\n        { number: '7', train: '-', ledDisplay: 'Offline', audioSystem: 'Maintenance', status: 'Maintenance' },\r\n        { number: '8', train: '-', ledDisplay: 'Online', audioSystem: 'Online', status: 'Available' },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Failed to fetch platforms:', error);\r\n    }\r\n  };\r\n\r\n  const fetchCapAlerts = async () => {\r\n    try {\r\n      // Replace with actual API call\r\n      // const response = await fetch('/api/cap-alerts');\r\n      // const data = await response.json();\r\n      \r\n      // Mock data for now\r\n      setCapAlerts([\r\n        { id: 'CAP001', type: 'Weather', title: 'Heavy Rain Alert', severity: 'High', status: 'Active', time: '13:45' },\r\n        { id: 'CAP002', type: 'Security', title: 'Platform Security Check', severity: 'Medium', status: 'Resolved', time: '12:30' },\r\n        { id: 'CAP003', type: 'Technical', title: 'Signal System Maintenance', severity: 'Low', status: 'Scheduled', time: '11:15' },\r\n        { id: 'CAP004', type: 'Emergency', title: 'Medical Assistance Required', severity: 'High', status: 'Resolved', time: '10:45' },\r\n        { id: 'CAP005', type: 'Operational', title: 'Platform Cleaning Schedule', severity: 'Low', status: 'Active', time: '09:30' },\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Failed to fetch CAP alerts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const email = Cookies.get('email');\r\n      if (!email) return;\r\n\r\n      // Replace with actual API call\r\n      // const response = await fetch(`/api/user-profile?email=${email}`);\r\n      // const data = await response.json();\r\n      \r\n      // Mock data for now\r\n      setUserProfile({\r\n        fullName: 'Rahul Kumar',\r\n        role: 'Station Manager',\r\n        station: 'Central Railway Station'\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to fetch user profile:', error);\r\n    }\r\n  };\r\n\r\n  // Real-time updates\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setLastUpdated(new Date());\r\n      // Refresh data periodically\r\n      fetchActiveTrains();\r\n      fetchSystemLogs();\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleNavigation = (path) => {\r\n    try {\r\n      router.push(path);\r\n    } catch (error) {\r\n      console.error('Navigation error:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'online':\r\n      case 'active':\r\n      case 'on time':\r\n      case 'resolved':\r\n      case 'operational':\r\n        return successColor;\r\n      case 'offline':\r\n      case 'maintenance':\r\n      case 'delayed':\r\n      case 'high':\r\n        return errorColor;\r\n      case 'medium':\r\n      case 'scheduled':\r\n      case 'boarding':\r\n        return warningColor;\r\n      default:\r\n        return textSecondary;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        backgroundColor: backgroundColor,\r\n        color: textPrimary,\r\n      }}\r\n    >\r\n      <Container maxWidth=\"xl\" sx={{ py: 3 }}>\r\n        {/* Header */}\r\n        <Box\r\n          sx={{\r\n            backgroundColor: cardBackground,\r\n            borderRadius: 3,\r\n            p: 3,\r\n            mb: 3,\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Box>\r\n            <Typography variant=\"h4\" sx={{ color: accentColor, fontWeight: 700, mb: 1 }}>\r\n              IPIS Management Dashboard\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ color: textSecondary }}>\r\n              Last updated: {lastUpdated.toLocaleTimeString()}\r\n            </Typography>\r\n          </Box>\r\n          \r\n          {userProfile && (\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n              <Box textAlign=\"right\">\r\n                <Typography variant=\"h6\" fontWeight={600}>\r\n                  {userProfile.fullName}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ color: textSecondary }}>\r\n                  {userProfile.role}\r\n                </Typography>\r\n              </Box>\r\n              <Avatar\r\n                sx={{\r\n                  width: 48,\r\n                  height: 48,\r\n                  bgcolor: primaryColor,\r\n                  color: 'white',\r\n                  fontWeight: 600,\r\n                }}\r\n              >\r\n                {userProfile.fullName?.split(' ').map(n => n[0]).join('')}\r\n              </Avatar>\r\n              <IconButton\r\n                onClick={() => setLastUpdated(new Date())}\r\n                sx={{ color: accentColor }}\r\n              >\r\n                <Refresh />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Station Info Header */}\r\n        <Card\r\n          sx={{\r\n            backgroundColor: cardBackground,\r\n            borderRadius: 3,\r\n            mb: 3,\r\n            cursor: 'pointer',\r\n            '&:hover': { transform: 'translateY(-2px)', transition: 'all 0.3s' },\r\n          }}\r\n          onClick={() => handleNavigation('/rms/station-info')}\r\n        >\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n              <LocationCity sx={{ color: accentColor, fontSize: 32 }} />\r\n              <Box>\r\n                <Typography variant=\"h5\" sx={{ color: accentColor, fontWeight: 700 }}>\r\n                  Station Information\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ color: textSecondary }}>\r\n                  {stationInfo.name} - Code: {stationInfo.code} | Zone: {stationInfo.zone}\r\n                </Typography>\r\n              </Box>\r\n              <Box ml=\"auto\">\r\n                <Chip\r\n                  label={stationInfo.status}\r\n                  sx={{\r\n                    backgroundColor: getStatusColor(stationInfo.status),\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Settings />}\r\n              sx={{\r\n                bgcolor: primaryColor,\r\n                color: 'white',\r\n                fontWeight: 600,\r\n                textTransform: 'none',\r\n                '&:hover': { bgcolor: accentColor },\r\n              }}\r\n            >\r\n              Manage Station Configuration\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Main 2x2 Grid */}\r\n        <Grid container spacing={3}>\r\n          {/* Active Trains - Left Side (Taller) */}\r\n          <Grid item xs={12} md={8}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: cardBackground,\r\n                height: '500px',\r\n                borderRadius: 3,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}\r\n            >\r\n              <CardContent sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n                  <Train sx={{ color: accentColor, fontSize: 28 }} />\r\n                  <Typography variant=\"h5\" sx={{ color: accentColor, fontWeight: 700 }}>\r\n                    Active Trains\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: textSecondary, ml: 'auto' }}>\r\n                    {activeTrains.length} trains currently active\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box sx={{ flex: 1, overflow: 'auto' }}>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow sx={{ bgcolor: tableHeaderBg }}>\r\n                        <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Train Name</TableCell>\r\n                        <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Route</TableCell>\r\n                        <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Platform</TableCell>\r\n                        <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Status</TableCell>\r\n                        <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Departure</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {activeTrains.map((train) => (\r\n                        <TableRow key={train.id} sx={{ '&:hover': { bgcolor: '#1C2128' } }}>\r\n                          <TableCell sx={{ color: textPrimary, fontWeight: 600 }}>\r\n                            {train.name}\r\n                          </TableCell>\r\n                          <TableCell sx={{ color: textSecondary }}>{train.route}</TableCell>\r\n                          <TableCell sx={{ color: textPrimary }}>{train.platform}</TableCell>\r\n                          <TableCell>\r\n                            <Chip\r\n                              label={train.status}\r\n                              size=\"small\"\r\n                              sx={{\r\n                                backgroundColor: getStatusColor(train.status),\r\n                                color: 'white',\r\n                                fontSize: '0.7rem',\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell sx={{ color: textPrimary }}>{train.departure}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  endIcon={<ArrowForward />}\r\n                  onClick={() => handleNavigation('/rms/active-trains')}\r\n                  sx={{\r\n                    bgcolor: accentColor,\r\n                    color: 'white',\r\n                    fontWeight: 600,\r\n                    py: 1.5,\r\n                    mt: 2,\r\n                    textTransform: 'none',\r\n                    '&:hover': { bgcolor: primaryColor },\r\n                  }}\r\n                >\r\n                  View All Active Trains\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Right Panel - Platform & Devices */}\r\n          <Grid item xs={12} md={4}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: cardBackground,\r\n                height: '240px',\r\n                borderRadius: 3,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                mb: 3,\r\n              }}\r\n            >\r\n              <CardContent sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n                  <Terminal sx={{ color: accentColor }} />\r\n                  <Typography variant=\"h6\" sx={{ color: accentColor, fontWeight: 700 }}>\r\n                    Platform & Devices\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box sx={{ flex: 1, overflow: 'auto' }}>\r\n                  <Table size=\"small\">\r\n                    <TableHead>\r\n                      <TableRow sx={{ bgcolor: tableHeaderBg }}>\r\n                        <TableCell sx={{ color: accentColor, fontSize: '0.75rem' }}>Platform</TableCell>\r\n                        <TableCell sx={{ color: accentColor, fontSize: '0.75rem' }}>LED</TableCell>\r\n                        <TableCell sx={{ color: accentColor, fontSize: '0.75rem' }}>Audio</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {platforms.slice(0, 5).map((platform) => (\r\n                        <TableRow key={platform.number}>\r\n                          <TableCell sx={{ color: textPrimary, fontSize: '0.8rem' }}>\r\n                            {platform.number}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Box\r\n                              sx={{\r\n                                width: 8,\r\n                                height: 8,\r\n                                borderRadius: '50%',\r\n                                bgcolor: getStatusColor(platform.ledDisplay),\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Box\r\n                              sx={{\r\n                                width: 8,\r\n                                height: 8,\r\n                                borderRadius: '50%',\r\n                                bgcolor: getStatusColor(platform.audioSystem),\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </Box>\r\n\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  endIcon={<ArrowForward />}\r\n                  onClick={() => handleNavigation('/rms/devices')}\r\n                  sx={{\r\n                    borderColor: accentColor,\r\n                    color: accentColor,\r\n                    textTransform: 'none',\r\n                    '&:hover': { borderColor: primaryColor, color: primaryColor },\r\n                  }}\r\n                >\r\n                  View All Platforms\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* System Logs */}\r\n            <Card\r\n              sx={{\r\n                backgroundColor: cardBackground,\r\n                height: '240px',\r\n                borderRadius: 3,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}\r\n            >\r\n              <CardContent sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n                  <Assignment sx={{ color: accentColor }} />\r\n                  <Typography variant=\"h6\" sx={{ color: accentColor, fontWeight: 700 }}>\r\n                    System Logs\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Box sx={{ flex: 1, overflow: 'auto' }}>\r\n                  {systemLogs.slice(0, 6).map((log) => (\r\n                    <Box\r\n                      key={log.id}\r\n                      display=\"flex\"\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      py={0.5}\r\n                      sx={{ borderBottom: `1px solid #30363D` }}\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ color: textPrimary, fontSize: '0.8rem' }}>\r\n                        {log.event}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" sx={{ color: textSecondary }}>\r\n                        {log.timestamp}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  endIcon={<ArrowForward />}\r\n                  onClick={() => handleNavigation('/rms/activity-log')}\r\n                  sx={{\r\n                    borderColor: accentColor,\r\n                    color: accentColor,\r\n                    textTransform: 'none',\r\n                    mt: 1,\r\n                    '&:hover': { borderColor: primaryColor, color: primaryColor },\r\n                  }}\r\n                >\r\n                  View All Logs\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* CAP Alerts - Bottom */}\r\n          <Grid item xs={12}>\r\n            <Card\r\n              sx={{\r\n                backgroundColor: cardBackground,\r\n                borderRadius: 3,\r\n              }}\r\n            >\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n                  <Security sx={{ color: errorColor }} />\r\n                  <Typography variant=\"h6\" sx={{ color: errorColor, fontWeight: 700 }}>\r\n                    CAP Alerts (Top 5)\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow sx={{ bgcolor: tableHeaderBg }}>\r\n                      <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Alert ID</TableCell>\r\n                      <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Type</TableCell>\r\n                      <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Title</TableCell>\r\n                      <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Severity</TableCell>\r\n                      <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Status</TableCell>\r\n                      <TableCell sx={{ color: accentColor, fontWeight: 600 }}>Time</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {capAlerts.map((alert) => (\r\n                      <TableRow key={alert.id} sx={{ '&:hover': { bgcolor: '#1C2128' } }}>\r\n                        <TableCell sx={{ color: textPrimary, fontWeight: 600 }}>\r\n                          {alert.id}\r\n                        </TableCell>\r\n                        <TableCell sx={{ color: textSecondary }}>{alert.type}</TableCell>\r\n                        <TableCell sx={{ color: textPrimary }}>{alert.title}</TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            label={alert.severity}\r\n                            size=\"small\"\r\n                            sx={{\r\n                              backgroundColor: getStatusColor(alert.severity),\r\n                              color: 'white',\r\n                              fontSize: '0.7rem',\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell sx={{ color: textPrimary }}>{alert.status}</TableCell>\r\n                        <TableCell sx={{ color: textSecondary }}>{alert.time}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                <Box mt={2}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    endIcon={<ArrowForward />}\r\n                    onClick={() => handleNavigation('/rms/cap-alerts')}\r\n                    sx={{\r\n                      bgcolor: errorColor,\r\n                      color: 'white',\r\n                      fontWeight: 600,\r\n                      textTransform: 'none',\r\n                      '&:hover': { bgcolor: '#B91C1C' },\r\n                    }}\r\n                  >\r\n                    Manage All CAP Alerts\r\n                  </Button>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Footer */}\r\n        <Box\r\n          sx={{\r\n            backgroundColor: cardBackground,\r\n            borderRadius: 2,\r\n            p: 2,\r\n            mt: 4,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\" sx={{ color: textSecondary }}>\r\n            Railway Information & Passenger Information System (IPIS) - Version 2.1.4\r\n          </Typography>\r\n          <Typography variant=\"caption\" sx={{ color: textSecondary, opacity: 0.7 }}>\r\n            © 2024 Indian Railways • All Rights Reserved\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}