{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/PROJECTS%20LIVE%20NOW/your-portal/app/rms/platforms-devices/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Snackbar,\r\n  Alert,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  Chip,\r\n  Divider,\r\n  Container,\r\n  Fab,\r\n  Menu,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Refresh as RefreshIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Computer as ComputerIcon,\r\n  LocationOn as LocationIcon,\r\n  Schedule as ScheduleIcon,\r\n  MoreVert as MoreVertIcon,\r\n} from '@mui/icons-material';\r\n\r\ninterface Device {\r\n  id: string;\r\n  name: string;\r\n  location: string;\r\n  status: 'active' | 'inactive';\r\n  lastUpdated: string;\r\n}\r\n\r\nexport default function PlatformsDevicesPage() {\r\n  const [devices, setDevices] = useState<Device[]>([\r\n    { id: 'DEV001', name: 'Main Server', location: 'Data Center A', status: 'active', lastUpdated: new Date().toISOString() },\r\n    { id: 'DEV002', name: 'Backup Server', location: 'Data Center B', status: 'inactive', lastUpdated: new Date(Date.now() - 86400000).toISOString() },\r\n    { id: 'DEV003', name: 'Edge Router', location: 'Office Floor 1', status: 'active', lastUpdated: new Date().toISOString() }\r\n  ]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editingDevice, setEditingDevice] = useState<Device | null>(null);\r\n  const [formData, setFormData] = useState({ name: '', location: '', status: 'active' as 'active' | 'inactive' });\r\n  const [snack, setSnack] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\r\n  const [isAdmin, setIsAdmin] = useState(true); // You can set this based on user role\r\n\r\n  const showSnack = (message: string, severity: 'success' | 'error' = 'success') => {\r\n    setSnack({ open: true, message, severity });\r\n  };\r\n\r\n  const fetchDevices = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/rms/platforms-devices');\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        setDevices(result.data);\r\n        showSnack('Devices refreshed successfully');\r\n      } else {\r\n        showSnack(result.message || 'Failed to fetch devices', 'error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      showSnack('Failed to fetch devices', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, device: Device) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setSelectedDevice(device);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setSelectedDevice(null);\r\n  };\r\n\r\n  const handleDialogOpen = (device?: Device) => {\r\n    if (device) {\r\n      setEditingDevice(device);\r\n      setFormData({ name: device.name, location: device.location, status: device.status });\r\n    } else {\r\n      setEditingDevice(null);\r\n      setFormData({ name: '', location: '', status: 'active' });\r\n    }\r\n    setOpenDialog(true);\r\n    handleMenuClose();\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n    setEditingDevice(null);\r\n    setFormData({ name: '', location: '', status: 'active' });\r\n  };\r\n\r\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!formData.name.trim() || !formData.location.trim()) {\r\n      showSnack('Please fill in all fields', 'error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (editingDevice) {\r\n        // Update existing device\r\n        const response = await fetch('/api/rms/platforms-devices', {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            id: editingDevice.id,\r\n            ...formData,\r\n          }),\r\n        });\r\n\r\n        const result = await response.json();\r\n        \r\n        if (result.success) {\r\n          setDevices(devices.map(device => \r\n            device.id === editingDevice.id ? result.device : device\r\n          ));\r\n          showSnack('Device updated successfully');\r\n        } else {\r\n          showSnack(result.message || 'Failed to update device', 'error');\r\n        }\r\n      } else {\r\n        // Add new device\r\n        const response = await fetch('/api/rms/platforms-devices', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(formData),\r\n        });\r\n\r\n        const result = await response.json();\r\n        \r\n        if (result.success) {\r\n          setDevices([...devices, result.device]);\r\n          showSnack('Device added successfully');\r\n        } else {\r\n          showSnack(result.message || 'Failed to add device', 'error');\r\n        }\r\n      }\r\n      handleDialogClose();\r\n    } catch (error) {\r\n      console.error('Submit error:', error);\r\n      showSnack('An error occurred. Please try again.', 'error');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!selectedDevice) return;\r\n\r\n    try {\r\n      const response = await fetch(`/api/rms/platforms-devices?id=${selectedDevice.id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        setDevices(devices.filter(device => device.id !== selectedDevice.id));\r\n        showSnack('Device deleted successfully');\r\n      } else {\r\n        showSnack(result.message || 'Failed to delete device', 'error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Delete error:', error);\r\n      showSnack('Failed to delete device', 'error');\r\n    } finally {\r\n      handleMenuClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: '#121212', minHeight: '100vh', py: 3 }}>\r\n      <Container maxWidth=\"xl\">\r\n        {/* Header */}\r\n        <Paper elevation={2} sx={{ p: 3, mb: 3, borderRadius: 2, bgcolor: '#1e1e1e' }}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Box>\r\n              <Typography variant=\"h4\" fontWeight=\"600\" color=\"white\" gutterBottom>\r\n                Platform Devices\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"grey.400\">\r\n                Manage and monitor your connected devices\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <IconButton \r\n                onClick={fetchDevices} \r\n                disabled={loading}\r\n                sx={{ mr: 1, bgcolor: 'rgba(255,255,255,0.1)', color: 'white' }}\r\n              >\r\n                <RefreshIcon />\r\n              </IconButton>\r\n              {isAdmin && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  startIcon={<AddIcon />}\r\n                  onClick={() => handleDialogOpen()}\r\n                  sx={{ borderRadius: 2 }}\r\n                >\r\n                  Add Device\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n\r\n        {/* Devices Grid */}\r\n        {loading ? (\r\n          <Box display=\"flex\" justifyContent=\"center\" py={8}>\r\n            <Typography variant=\"h6\" color=\"grey.400\">Loading devices...</Typography>\r\n          </Box>\r\n        ) : devices.length === 0 ? (\r\n          <Paper sx={{ p: 8, textAlign: 'center', borderRadius: 2, bgcolor: '#1e1e1e' }}>\r\n            <ComputerIcon sx={{ fontSize: 80, color: 'grey.600', mb: 2 }} />\r\n            <Typography variant=\"h6\" color=\"grey.400\" gutterBottom>\r\n              No devices found\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"grey.500\" mb={3}>\r\n              Add your first device to get started\r\n            </Typography>\r\n            {isAdmin && (\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<AddIcon />}\r\n                onClick={() => handleDialogOpen()}\r\n              >\r\n                Add Device\r\n              </Button>\r\n            )}\r\n          </Paper>\r\n        ) : (\r\n          <Grid container spacing={3}>\r\n            {devices.map((device) => (\r\n              <Grid item xs={12} sm={6} md={4} lg={3} key={device.id}>\r\n                <Card \r\n                  elevation={2} \r\n                  sx={{ \r\n                    height: '100%',\r\n                    borderRadius: 2,\r\n                    bgcolor: '#2c2c2c',\r\n                    transition: 'all 0.2s',\r\n                    '&:hover': { \r\n                      elevation: 4,\r\n                      transform: 'translateY(-2px)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <CardContent sx={{ pb: 1 }}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\r\n                      <ComputerIcon color=\"primary\" sx={{ fontSize: 40 }} />\r\n                      {isAdmin && (\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={(e) => handleMenuOpen(e, device)}\r\n                          sx={{ color: 'grey.400' }}\r\n                        >\r\n                          <MoreVertIcon />\r\n                        </IconButton>\r\n                      )}\r\n                    </Box>\r\n                    \r\n                    <Typography variant=\"h6\" fontWeight=\"600\" gutterBottom color=\"white\">\r\n                      {device.name}\r\n                    </Typography>\r\n                    \r\n                    <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                      <LocationIcon sx={{ fontSize: 16, mr: 1, color: 'grey.400' }} />\r\n                      <Typography variant=\"body2\" color=\"grey.400\">\r\n                        {device.location}\r\n                      </Typography>\r\n                    </Box>\r\n                    \r\n                    <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                      <ScheduleIcon sx={{ fontSize: 16, mr: 1, color: 'grey.400' }} />\r\n                      <Typography variant=\"body2\" color=\"grey.400\">\r\n                        {new Date(device.lastUpdated).toLocaleDateString()}\r\n                      </Typography>\r\n                    </Box>\r\n                    \r\n                    <Chip\r\n                      label={device.status}\r\n                      color={device.status === 'active' ? 'success' : 'warning'}\r\n                      size=\"small\"\r\n                      sx={{ textTransform: 'capitalize', fontWeight: 500 }}\r\n                    />\r\n                  </CardContent>\r\n                  \r\n                  <Divider sx={{ bgcolor: 'rgba(255,255,255,0.1)' }} />\r\n                  \r\n                  <CardActions sx={{ justifyContent: 'space-between', px: 2 }}>\r\n                    <Typography variant=\"caption\" color=\"grey.500\">\r\n                      ID: {device.id}\r\n                    </Typography>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        )}\r\n\r\n        {/* Action Menu */}\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleMenuClose}\r\n          PaperProps={{ sx: { bgcolor: '#2c2c2c' } }}\r\n        >\r\n          <MenuItem onClick={() => handleDialogOpen(selectedDevice!)} sx={{ color: 'white' }}>\r\n            <EditIcon sx={{ mr: 1, fontSize: 20 }} />\r\n            Edit\r\n          </MenuItem>\r\n          <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\r\n            <DeleteIcon sx={{ mr: 1, fontSize: 20 }} />\r\n            Delete\r\n          </MenuItem>\r\n        </Menu>\r\n\r\n        {/* Add/Edit Dialog */}\r\n        <Dialog \r\n          open={openDialog} \r\n          onClose={handleDialogClose} \r\n          maxWidth=\"sm\" \r\n          fullWidth\r\n          PaperProps={{ sx: { borderRadius: 2, bgcolor: '#2c2c2c' } }}\r\n        >\r\n          <DialogTitle sx={{ pb: 1, color: 'white' }}>\r\n            {editingDevice ? 'Edit Device' : 'Add New Device'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              label=\"Device Name\"\r\n              name=\"name\"\r\n              fullWidth\r\n              value={formData.name}\r\n              onChange={handleFormChange}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  color: 'white',\r\n                  '& fieldset': { borderColor: 'grey.600' },\r\n                  '&:hover fieldset': { borderColor: 'grey.500' },\r\n                  '&.Mui-focused fieldset': { borderColor: 'primary.main' }\r\n                },\r\n                '& .MuiInputLabel-root': { color: 'grey.400' }\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Location\"\r\n              name=\"location\"\r\n              fullWidth\r\n              value={formData.location}\r\n              onChange={handleFormChange}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  color: 'white',\r\n                  '& fieldset': { borderColor: 'grey.600' },\r\n                  '&:hover fieldset': { borderColor: 'grey.500' },\r\n                  '&.Mui-focused fieldset': { borderColor: 'primary.main' }\r\n                },\r\n                '& .MuiInputLabel-root': { color: 'grey.400' }\r\n              }}\r\n            />\r\n            {editingDevice && (\r\n              <TextField\r\n                select\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                fullWidth\r\n                value={formData.status}\r\n                onChange={handleFormChange}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                SelectProps={{ native: true }}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    color: 'white',\r\n                    '& fieldset': { borderColor: 'grey.600' },\r\n                    '&:hover fieldset': { borderColor: 'grey.500' },\r\n                    '&.Mui-focused fieldset': { borderColor: 'primary.main' }\r\n                  },\r\n                  '& .MuiInputLabel-root': { color: 'grey.400' }\r\n                }}\r\n              >\r\n                <option value=\"active\">Active</option>\r\n                <option value=\"inactive\">Inactive</option>\r\n              </TextField>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ p: 3, pt: 1 }}>\r\n            <Button onClick={handleDialogClose} sx={{ color: 'grey.400' }}>\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={handleSubmit} \r\n              variant=\"contained\"\r\n              sx={{ borderRadius: 2 }}\r\n            >\r\n              {editingDevice ? 'Update' : 'Add Device'}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Notification */}\r\n        <Snackbar\r\n          open={snack.open}\r\n          autoHideDuration={4000}\r\n          onClose={() => setSnack({ ...snack, open: false })}\r\n        >\r\n          <Alert \r\n            onClose={() => setSnack({ ...snack, open: false })} \r\n            severity={snack.severity}\r\n            sx={{ width: '100%', borderRadius: 2 }}\r\n          >\r\n            {snack.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    </Box>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;;;;;;;;;;;;AA8Ce,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAC/C;YAAE,IAAI;YAAU,MAAM;YAAe,UAAU;YAAiB,QAAQ;YAAU,aAAa,IAAI,OAAO,WAAW;QAAG;QACxH;YAAE,IAAI;YAAU,MAAM;YAAiB,UAAU;YAAiB,QAAQ;YAAY,aAAa,IAAI,KAAK,KAAK,GAAG,KAAK,UAAU,WAAW;QAAG;QACjJ;YAAE,IAAI;YAAU,MAAM;YAAe,UAAU;YAAkB,QAAQ;YAAU,aAAa,IAAI,OAAO,WAAW;QAAG;KAC1H;IACD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAI,UAAU;QAAI,QAAQ;IAAkC;IAC7G,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAO,SAAS;QAAI,UAAU;IAAiC;IAC1G,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAC7D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,sCAAsC;IAEpF,MAAM,YAAY,CAAC,SAAiB,WAAgC,SAAS;QAC3E,SAAS;YAAE,MAAM;YAAM;YAAS;QAAS;IAC3C;IAEA,MAAM,eAAe;QACnB,WAAW;QACX,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,IAAI,OAAO,OAAO,EAAE;gBAClB,WAAW,OAAO,IAAI;gBACtB,UAAU;YACZ,OAAO;gBACL,UAAU,OAAO,OAAO,IAAI,2BAA2B;YACzD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,UAAU,2BAA2B;QACvC,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,iBAAiB,CAAC,OAAsC;QAC5D,YAAY,MAAM,aAAa;QAC/B,kBAAkB;IACpB;IAEA,MAAM,kBAAkB;QACtB,YAAY;QACZ,kBAAkB;IACpB;IAEA,MAAM,mBAAmB,CAAC;QACxB,IAAI,QAAQ;YACV,iBAAiB;YACjB,YAAY;gBAAE,MAAM,OAAO,IAAI;gBAAE,UAAU,OAAO,QAAQ;gBAAE,QAAQ,OAAO,MAAM;YAAC;QACpF,OAAO;YACL,iBAAiB;YACjB,YAAY;gBAAE,MAAM;gBAAI,UAAU;gBAAI,QAAQ;YAAS;QACzD;QACA,cAAc;QACd;IACF;IAEA,MAAM,oBAAoB;QACxB,cAAc;QACd,iBAAiB;QACjB,YAAY;YAAE,MAAM;YAAI,UAAU;YAAI,QAAQ;QAAS;IACzD;IAEA,MAAM,mBAAmB,CAAC;QACxB,YAAY;YAAE,GAAG,QAAQ;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IAC7D;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,MAAM,CAAC,SAAS,QAAQ,CAAC,IAAI,IAAI;YACtD,UAAU,6BAA6B;YACvC;QACF;QAEA,IAAI;YACF,IAAI,eAAe;gBACjB,yBAAyB;gBACzB,MAAM,WAAW,MAAM,MAAM,8BAA8B;oBACzD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB,IAAI,cAAc,EAAE;wBACpB,GAAG,QAAQ;oBACb;gBACF;gBAEA,MAAM,SAAS,MAAM,SAAS,IAAI;gBAElC,IAAI,OAAO,OAAO,EAAE;oBAClB,WAAW,QAAQ,GAAG,CAAC,CAAA,SACrB,OAAO,EAAE,KAAK,cAAc,EAAE,GAAG,OAAO,MAAM,GAAG;oBAEnD,UAAU;gBACZ,OAAO;oBACL,UAAU,OAAO,OAAO,IAAI,2BAA2B;gBACzD;YACF,OAAO;gBACL,iBAAiB;gBACjB,MAAM,WAAW,MAAM,MAAM,8BAA8B;oBACzD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;gBACvB;gBAEA,MAAM,SAAS,MAAM,SAAS,IAAI;gBAElC,IAAI,OAAO,OAAO,EAAE;oBAClB,WAAW;2BAAI;wBAAS,OAAO,MAAM;qBAAC;oBACtC,UAAU;gBACZ,OAAO;oBACL,UAAU,OAAO,OAAO,IAAI,wBAAwB;gBACtD;YACF;YACA;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,UAAU,wCAAwC;QACpD;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,gBAAgB;QAErB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,8BAA8B,EAAE,eAAe,EAAE,EAAE,EAAE;gBACjF,QAAQ;YACV;YAEA,MAAM,SAAS,MAAM,SAAS,IAAI;YAElC,IAAI,OAAO,OAAO,EAAE;gBAClB,WAAW,QAAQ,MAAM,CAAC,CAAA,SAAU,OAAO,EAAE,KAAK,eAAe,EAAE;gBACnE,UAAU;YACZ,OAAO;gBACL,UAAU,OAAO,OAAO,IAAI,2BAA2B;YACzD;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,UAAU,2BAA2B;QACvC,SAAU;YACR;QACF;IACF;IAEA,qBACE,8OAAC,wLAAA,CAAA,MAAG;QAAC,IAAI;YAAE,SAAS;YAAW,WAAW;YAAS,IAAI;QAAE;kBACvD,cAAA,8OAAC,0MAAA,CAAA,YAAS;YAAC,UAAS;;8BAElB,8OAAC,8LAAA,CAAA,QAAK;oBAAC,WAAW;oBAAG,IAAI;wBAAE,GAAG;wBAAG,IAAI;wBAAG,cAAc;wBAAG,SAAS;oBAAU;8BAC1E,cAAA,8OAAC,wLAAA,CAAA,MAAG;wBAAC,SAAQ;wBAAO,gBAAe;wBAAgB,YAAW;;0CAC5D,8OAAC,wLAAA,CAAA,MAAG;;kDACF,8OAAC,6MAAA,CAAA,aAAU;wCAAC,SAAQ;wCAAK,YAAW;wCAAM,OAAM;wCAAQ,YAAY;kDAAC;;;;;;kDAGrE,8OAAC,6MAAA,CAAA,aAAU;wCAAC,SAAQ;wCAAQ,OAAM;kDAAW;;;;;;;;;;;;0CAI/C,8OAAC,wLAAA,CAAA,MAAG;;kDACF,8OAAC,6MAAA,CAAA,aAAU;wCACT,SAAS;wCACT,UAAU;wCACV,IAAI;4CAAE,IAAI;4CAAG,SAAS;4CAAyB,OAAO;wCAAQ;kDAE9D,cAAA,8OAAC,4JAAA,CAAA,UAAW;;;;;;;;;;oCAEb,yBACC,8OAAC,iMAAA,CAAA,SAAM;wCACL,SAAQ;wCACR,yBAAW,8OAAC,wJAAA,CAAA,UAAO;;;;;wCACnB,SAAS,IAAM;wCACf,IAAI;4CAAE,cAAc;wCAAE;kDACvB;;;;;;;;;;;;;;;;;;;;;;;gBASR,wBACC,8OAAC,wLAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAO,gBAAe;oBAAS,IAAI;8BAC9C,cAAA,8OAAC,6MAAA,CAAA,aAAU;wBAAC,SAAQ;wBAAK,OAAM;kCAAW;;;;;;;;;;2BAE1C,QAAQ,MAAM,KAAK,kBACrB,8OAAC,8LAAA,CAAA,QAAK;oBAAC,IAAI;wBAAE,GAAG;wBAAG,WAAW;wBAAU,cAAc;wBAAG,SAAS;oBAAU;;sCAC1E,8OAAC,6JAAA,CAAA,UAAY;4BAAC,IAAI;gCAAE,UAAU;gCAAI,OAAO;gCAAY,IAAI;4BAAE;;;;;;sCAC3D,8OAAC,6MAAA,CAAA,aAAU;4BAAC,SAAQ;4BAAK,OAAM;4BAAW,YAAY;sCAAC;;;;;;sCAGvD,8OAAC,6MAAA,CAAA,aAAU;4BAAC,SAAQ;4BAAQ,OAAM;4BAAW,IAAI;sCAAG;;;;;;wBAGnD,yBACC,8OAAC,iMAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,yBAAW,8OAAC,wJAAA,CAAA,UAAO;;;;;4BACnB,SAAS,IAAM;sCAChB;;;;;;;;;;;yCAML,8OAAC,2LAAA,CAAA,OAAI;oBAAC,SAAS;oBAAC,SAAS;8BACtB,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC,2LAAA,CAAA,OAAI;4BAAC,IAAI;4BAAC,IAAI;4BAAI,IAAI;4BAAG,IAAI;4BAAG,IAAI;sCACnC,cAAA,8OAAC,2LAAA,CAAA,OAAI;gCACH,WAAW;gCACX,IAAI;oCACF,QAAQ;oCACR,cAAc;oCACd,SAAS;oCACT,YAAY;oCACZ,WAAW;wCACT,WAAW;wCACX,WAAW;oCACb;gCACF;;kDAEA,8OAAC,gNAAA,CAAA,cAAW;wCAAC,IAAI;4CAAE,IAAI;wCAAE;;0DACvB,8OAAC,wLAAA,CAAA,MAAG;gDAAC,SAAQ;gDAAO,gBAAe;gDAAgB,YAAW;gDAAa,IAAI;;kEAC7E,8OAAC,6JAAA,CAAA,UAAY;wDAAC,OAAM;wDAAU,IAAI;4DAAE,UAAU;wDAAG;;;;;;oDAChD,yBACC,8OAAC,6MAAA,CAAA,aAAU;wDACT,MAAK;wDACL,SAAS,CAAC,IAAM,eAAe,GAAG;wDAClC,IAAI;4DAAE,OAAO;wDAAW;kEAExB,cAAA,8OAAC,6JAAA,CAAA,UAAY;;;;;;;;;;;;;;;;0DAKnB,8OAAC,6MAAA,CAAA,aAAU;gDAAC,SAAQ;gDAAK,YAAW;gDAAM,YAAY;gDAAC,OAAM;0DAC1D,OAAO,IAAI;;;;;;0DAGd,8OAAC,wLAAA,CAAA,MAAG;gDAAC,SAAQ;gDAAO,YAAW;gDAAS,IAAI;;kEAC1C,8OAAC,+JAAA,CAAA,UAAY;wDAAC,IAAI;4DAAE,UAAU;4DAAI,IAAI;4DAAG,OAAO;wDAAW;;;;;;kEAC3D,8OAAC,6MAAA,CAAA,aAAU;wDAAC,SAAQ;wDAAQ,OAAM;kEAC/B,OAAO,QAAQ;;;;;;;;;;;;0DAIpB,8OAAC,wLAAA,CAAA,MAAG;gDAAC,SAAQ;gDAAO,YAAW;gDAAS,IAAI;;kEAC1C,8OAAC,6JAAA,CAAA,UAAY;wDAAC,IAAI;4DAAE,UAAU;4DAAI,IAAI;4DAAG,OAAO;wDAAW;;;;;;kEAC3D,8OAAC,6MAAA,CAAA,aAAU;wDAAC,SAAQ;wDAAQ,OAAM;kEAC/B,IAAI,KAAK,OAAO,WAAW,EAAE,kBAAkB;;;;;;;;;;;;0DAIpD,8OAAC,2LAAA,CAAA,OAAI;gDACH,OAAO,OAAO,MAAM;gDACpB,OAAO,OAAO,MAAM,KAAK,WAAW,YAAY;gDAChD,MAAK;gDACL,IAAI;oDAAE,eAAe;oDAAc,YAAY;gDAAI;;;;;;;;;;;;kDAIvD,8OAAC,oMAAA,CAAA,UAAO;wCAAC,IAAI;4CAAE,SAAS;wCAAwB;;;;;;kDAEhD,8OAAC,gNAAA,CAAA,cAAW;wCAAC,IAAI;4CAAE,gBAAgB;4CAAiB,IAAI;wCAAE;kDACxD,cAAA,8OAAC,6MAAA,CAAA,aAAU;4CAAC,SAAQ;4CAAU,OAAM;;gDAAW;gDACxC,OAAO,EAAE;;;;;;;;;;;;;;;;;;2BA1DuB,OAAO,EAAE;;;;;;;;;;8BAoE5D,8OAAC,2LAAA,CAAA,OAAI;oBACH,UAAU;oBACV,MAAM,QAAQ;oBACd,SAAS;oBACT,YAAY;wBAAE,IAAI;4BAAE,SAAS;wBAAU;oBAAE;;sCAEzC,8OAAC,uMAAA,CAAA,WAAQ;4BAAC,SAAS,IAAM,iBAAiB;4BAAkB,IAAI;gCAAE,OAAO;4BAAQ;;8CAC/E,8OAAC,yJAAA,CAAA,UAAQ;oCAAC,IAAI;wCAAE,IAAI;wCAAG,UAAU;oCAAG;;;;;;gCAAK;;;;;;;sCAG3C,8OAAC,uMAAA,CAAA,WAAQ;4BAAC,SAAS;4BAAc,IAAI;gCAAE,OAAO;4BAAa;;8CACzD,8OAAC,2JAAA,CAAA,UAAU;oCAAC,IAAI;wCAAE,IAAI;wCAAG,UAAU;oCAAG;;;;;;gCAAK;;;;;;;;;;;;;8BAM/C,8OAAC,iMAAA,CAAA,SAAM;oBACL,MAAM;oBACN,SAAS;oBACT,UAAS;oBACT,SAAS;oBACT,YAAY;wBAAE,IAAI;4BAAE,cAAc;4BAAG,SAAS;wBAAU;oBAAE;;sCAE1D,8OAAC,gNAAA,CAAA,cAAW;4BAAC,IAAI;gCAAE,IAAI;gCAAG,OAAO;4BAAQ;sCACtC,gBAAgB,gBAAgB;;;;;;sCAEnC,8OAAC,sNAAA,CAAA,gBAAa;;8CACZ,8OAAC,0MAAA,CAAA,YAAS;oCACR,OAAM;oCACN,MAAK;oCACL,SAAS;oCACT,OAAO,SAAS,IAAI;oCACpB,UAAU;oCACV,QAAO;oCACP,SAAQ;oCACR,IAAI;wCACF,4BAA4B;4CAC1B,OAAO;4CACP,cAAc;gDAAE,aAAa;4CAAW;4CACxC,oBAAoB;gDAAE,aAAa;4CAAW;4CAC9C,0BAA0B;gDAAE,aAAa;4CAAe;wCAC1D;wCACA,yBAAyB;4CAAE,OAAO;wCAAW;oCAC/C;;;;;;8CAEF,8OAAC,0MAAA,CAAA,YAAS;oCACR,OAAM;oCACN,MAAK;oCACL,SAAS;oCACT,OAAO,SAAS,QAAQ;oCACxB,UAAU;oCACV,QAAO;oCACP,SAAQ;oCACR,IAAI;wCACF,4BAA4B;4CAC1B,OAAO;4CACP,cAAc;gDAAE,aAAa;4CAAW;4CACxC,oBAAoB;gDAAE,aAAa;4CAAW;4CAC9C,0BAA0B;gDAAE,aAAa;4CAAe;wCAC1D;wCACA,yBAAyB;4CAAE,OAAO;wCAAW;oCAC/C;;;;;;gCAED,+BACC,8OAAC,0MAAA,CAAA,YAAS;oCACR,MAAM;oCACN,OAAM;oCACN,MAAK;oCACL,SAAS;oCACT,OAAO,SAAS,MAAM;oCACtB,UAAU;oCACV,QAAO;oCACP,SAAQ;oCACR,aAAa;wCAAE,QAAQ;oCAAK;oCAC5B,IAAI;wCACF,4BAA4B;4CAC1B,OAAO;4CACP,cAAc;gDAAE,aAAa;4CAAW;4CACxC,oBAAoB;gDAAE,aAAa;4CAAW;4CAC9C,0BAA0B;gDAAE,aAAa;4CAAe;wCAC1D;wCACA,yBAAyB;4CAAE,OAAO;wCAAW;oCAC/C;;sDAEA,8OAAC;4CAAO,OAAM;sDAAS;;;;;;sDACvB,8OAAC;4CAAO,OAAM;sDAAW;;;;;;;;;;;;;;;;;;sCAI/B,8OAAC,sNAAA,CAAA,gBAAa;4BAAC,IAAI;gCAAE,GAAG;gCAAG,IAAI;4BAAE;;8CAC/B,8OAAC,iMAAA,CAAA,SAAM;oCAAC,SAAS;oCAAmB,IAAI;wCAAE,OAAO;oCAAW;8CAAG;;;;;;8CAG/D,8OAAC,iMAAA,CAAA,SAAM;oCACL,SAAS;oCACT,SAAQ;oCACR,IAAI;wCAAE,cAAc;oCAAE;8CAErB,gBAAgB,WAAW;;;;;;;;;;;;;;;;;;8BAMlC,8OAAC,uMAAA,CAAA,WAAQ;oBACP,MAAM,MAAM,IAAI;oBAChB,kBAAkB;oBAClB,SAAS,IAAM,SAAS;4BAAE,GAAG,KAAK;4BAAE,MAAM;wBAAM;8BAEhD,cAAA,8OAAC,8LAAA,CAAA,QAAK;wBACJ,SAAS,IAAM,SAAS;gCAAE,GAAG,KAAK;gCAAE,MAAM;4BAAM;wBAChD,UAAU,MAAM,QAAQ;wBACxB,IAAI;4BAAE,OAAO;4BAAQ,cAAc;wBAAE;kCAEpC,MAAM,OAAO;;;;;;;;;;;;;;;;;;;;;;AAM1B","debugId":null}}]
}