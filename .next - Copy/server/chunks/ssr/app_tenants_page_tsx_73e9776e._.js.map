{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/MAIN%20PROJECTS%20as%20an%20intern/RUNNING/GUMS/your-portal/app/tenants/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n  Tooltip,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TableContainer,\r\n  Paper,\r\n  Slide,\r\n} from '@mui/material';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { Add, Edit, Delete } from '@mui/icons-material';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\n\r\ninterface Tenant {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  company: string;\r\n  phone: string;\r\n}\r\n\r\nconst initialForm: Omit<Tenant, 'id'> = {\r\n  name: '',\r\n  email: '',\r\n  company: '',\r\n  phone: '',\r\n};\r\n\r\nconst Transition = forwardRef(function Transition(\r\n  props: TransitionProps & { children: React.ReactElement },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function TenantsPage() {\r\n  const [tenants, setTenants] = useState<Tenant[]>([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [form, setForm] = useState(initialForm);\r\n  const [editId, setEditId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const localData = localStorage.getItem('tenants');\r\n    if (localData) {\r\n      setTenants(JSON.parse(localData));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tenants', JSON.stringify(tenants));\r\n  }, [tenants]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setForm(initialForm);\r\n    setEditId(null);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!form.name || !form.email || !form.company || !form.phone) return;\r\n\r\n    if (editId) {\r\n      setTenants((prev) =>\r\n        prev.map((t) => (t.id === editId ? { id: editId, ...form } : t))\r\n      );\r\n    } else {\r\n      const newTenant: Tenant = { id: Date.now().toString(), ...form };\r\n      setTenants((prev) => [...prev, newTenant]);\r\n    }\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleEdit = (tenant: Tenant) => {\r\n    setEditId(tenant.id);\r\n    setForm({\r\n      name: tenant.name,\r\n      email: tenant.email,\r\n      company: tenant.company,\r\n      phone: tenant.phone,\r\n    });\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    setTenants((prev) => prev.filter((t) => t.id !== id));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 3 }}>\r\n        <Typography variant=\"h4\" fontWeight={600}>\r\n          Tenants\r\n        </Typography>\r\n        <Button variant=\"contained\" startIcon={<Add />} onClick={handleDialogOpen}>\r\n          Add Tenant\r\n        </Button>\r\n      </Grid>\r\n\r\n      <TableContainer component={Paper} elevation={2} sx={{ borderRadius: 2 }}>\r\n        <Table>\r\n          <TableHead sx={{ backgroundColor: '#f5f5f5' }}>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>Company</TableCell>\r\n              <TableCell>Phone</TableCell>\r\n              <TableCell align=\"center\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tenants.map((tenant) => (\r\n              <TableRow key={tenant.id} hover>\r\n                <TableCell>{tenant.name}</TableCell>\r\n                <TableCell>{tenant.email}</TableCell>\r\n                <TableCell>{tenant.company}</TableCell>\r\n                <TableCell>{tenant.phone}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton color=\"primary\" onClick={() => handleEdit(tenant)}>\r\n                      <Edit />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton color=\"error\" onClick={() => handleDelete(tenant.id)}>\r\n                      <Delete />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            {tenants.length === 0 && (\r\n              <TableRow>\r\n                <TableCell colSpan={5} align=\"center\">\r\n                  No tenants found.\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleDialogClose}\r\n        TransitionComponent={Transition}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle>{editId ? 'Edit Tenant' : 'Add New Tenant'}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2} mt={0.5}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                name=\"name\"\r\n                label=\"Full Name\"\r\n                value={form.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                name=\"email\"\r\n                label=\"Email Address\"\r\n                type=\"email\"\r\n                value={form.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                name=\"company\"\r\n                label=\"Company Name\"\r\n                value={form.company}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                required\r\n                name=\"phone\"\r\n                label=\"Phone Number\"\r\n                type=\"tel\"\r\n                value={form.phone}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions sx={{ px: 3, py: 2 }}>\r\n          <Button onClick={handleDialogClose}>Cancel</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleSave}\r\n            disabled={!form.name || !form.email || !form.company || !form.phone}\r\n          >\r\n            {editId ? 'Update' : 'Save'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}