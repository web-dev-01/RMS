{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/offic/OneDrive/Documents/MAIN%20PROJECTS%20as%20an%20intern/RUNNING/GUMS/your-portal/app/users/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Avatar,\r\n  Tooltip,\r\n  Grid,\r\n  Button,\r\n  CircularProgress,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  useTheme,\r\n  useMediaQuery\r\n} from '@mui/material';\r\n\r\nimport { Eye, Pencil, Trash2 } from 'lucide-react';\r\n\r\ninterface User {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n  department: string;\r\n  position: string;\r\n  avatarUrl?: string;\r\n}\r\n\r\nexport default function UsersPage() {\r\n  const theme = useTheme();\r\n  const isSm = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [rowsPerPage] = useState(8);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState<User | null>(null);\r\n\r\n  // Dummy users data for testing\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const dummyUsers: User[] = [\r\n      {\r\n        _id: '1',\r\n        name: 'Rahul Kumar',\r\n        email: 'rahul.kumar@example.com',\r\n        role: 'Admin',\r\n        department: 'IT',\r\n        position: 'Manager',\r\n        avatarUrl: '',\r\n      },\r\n      {\r\n        _id: '2',\r\n        name: 'Sneha Patel',\r\n        email: 'sneha.patel@example.com',\r\n        role: 'Employee',\r\n        department: 'Marketing',\r\n        position: 'Coordinator',\r\n        avatarUrl: '',\r\n      },\r\n      {\r\n        _id: '3',\r\n        name: 'Amit Singh',\r\n        email: 'amit.singh@example.com',\r\n        role: 'Employee',\r\n        department: 'Finance',\r\n        position: 'Analyst',\r\n        avatarUrl: '',\r\n      },\r\n      {\r\n        _id: '4',\r\n        name: 'Anjali Sharma',\r\n        email: 'anjali.sharma@example.com',\r\n        role: 'Admin',\r\n        department: 'HR',\r\n        position: 'Lead',\r\n        avatarUrl: '',\r\n      },\r\n      {\r\n        _id: '5',\r\n        name: 'Vikram Joshi',\r\n        email: 'vikram.joshi@example.com',\r\n        role: 'Employee',\r\n        department: 'IT',\r\n        position: 'Developer',\r\n        avatarUrl: '',\r\n      },\r\n    ];\r\n\r\n    const timer = setTimeout(() => {\r\n      setUsers(dummyUsers);\r\n      setLoading(false);\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Filter users by search\r\n  const filteredUsers = useMemo(() => {\r\n    if (!search.trim()) return users;\r\n    const lower = search.toLowerCase();\r\n    return users.filter(user =>\r\n      user.name.toLowerCase().includes(lower) ||\r\n      user.email.toLowerCase().includes(lower)\r\n    );\r\n  }, [search, users]);\r\n\r\n  // Pagination\r\n  const paginatedUsers = useMemo(() => {\r\n    const start = (page - 1) * rowsPerPage;\r\n    return filteredUsers.slice(start, start + rowsPerPage);\r\n  }, [page, rowsPerPage, filteredUsers]);\r\n\r\n  const pageCount = Math.ceil(filteredUsers.length / rowsPerPage);\r\n\r\n  // Handlers\r\n  const handleDeleteClick = (user: User) => {\r\n    setUserToDelete(user);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    // TODO: Call API to delete user here\r\n    setUsers(prev => prev.filter(u => u._id !== userToDelete?._id));\r\n    setDeleteDialogOpen(false);\r\n    setUserToDelete(null);\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteDialogOpen(false);\r\n    setUserToDelete(null);\r\n  };\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Box px={{ xs: 2, sm: 6 }} py={4} maxWidth={1200} mx=\"auto\">\r\n      <Typography variant={isSm ? \"h5\" : \"h4\"} fontWeight={700} mb={3} color=\"primary\">\r\n        User Management\r\n      </Typography>\r\n\r\n      <Grid container spacing={2} alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <TextField\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label=\"Search users by name or email\"\r\n            fullWidth\r\n            value={search}\r\n            onChange={e => {\r\n              setSearch(e.target.value);\r\n              setPage(1); // reset page on search\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"medium\" sx={{ fontWeight: 600 }}>\r\n            + Add New User\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {loading ? (\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={10}>\r\n          <CircularProgress color=\"primary\" size={36} />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <TableContainer component={Paper} elevation={3}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"user table\">\r\n              <TableHead sx={{ backgroundColor: '#f0f4f8' }}>\r\n                <TableRow>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Avatar</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Name</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Email</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Role</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Department</TableCell>\r\n                  <TableCell sx={{ fontWeight: 700 }}>Position</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 700, minWidth: 120 }}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {paginatedUsers.length === 0 ? (\r\n                  <TableRow>\r\n                    <TableCell colSpan={7} align=\"center\" sx={{ py: 5 }}>\r\n                      No users found.\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ) : (\r\n                  paginatedUsers.map(user => (\r\n                    <TableRow key={user._id} hover>\r\n                      <TableCell>\r\n                        <Tooltip title={user.role} arrow>\r\n                          <Avatar\r\n                            src={user.avatarUrl || undefined}\r\n                            alt={user.name}\r\n                            sx={{ bgcolor: '#1976d2', color: '#fff' }}\r\n                          >\r\n                            {user.name.charAt(0).toUpperCase()}\r\n                          </Avatar>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                      <TableCell>{user.name}</TableCell>\r\n                      <TableCell>\r\n                        <Typography\r\n                          sx={{ maxWidth: 220, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}\r\n                          title={user.email}\r\n                          variant=\"body2\"\r\n                        >\r\n                          {user.email}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>{user.role}</TableCell>\r\n                      <TableCell>{user.department}</TableCell>\r\n                      <TableCell>{user.position}</TableCell>\r\n                      <TableCell align=\"center\" sx={{ display: 'flex', justifyContent: 'center', gap: 1 }}>\r\n                        <Tooltip title=\"View\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            aria-label={`View details of ${user.name}`}\r\n                          >\r\n                            <Eye size={18} />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Edit\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"secondary\"\r\n                            aria-label={`Edit details of ${user.name}`}\r\n                          >\r\n                            <Pencil size={18} />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            aria-label={`Delete user ${user.name}`}\r\n                            onClick={() => handleDeleteClick(user)}\r\n                          >\r\n                            <Trash2 size={18} />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n          {/* Pagination */}\r\n          {pageCount > 1 && (\r\n            <Box mt={3} display=\"flex\" justifyContent=\"center\" gap={1} flexWrap=\"wrap\">\r\n              {Array.from({ length: pageCount }).map((_, i) => (\r\n                <Button\r\n                  key={i}\r\n                  size=\"small\"\r\n                  variant={page === i + 1 ? 'contained' : 'outlined'}\r\n                  color=\"primary\"\r\n                  onClick={() => handlePageChange(i + 1)}\r\n                  sx={{ minWidth: 36, fontWeight: 600 }}\r\n                >\r\n                  {i + 1}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          )}\r\n\r\n          {/* Delete Confirmation Dialog */}\r\n          <Dialog\r\n            open={deleteDialogOpen}\r\n            onClose={handleDeleteCancel}\r\n            aria-labelledby=\"delete-dialog-title\"\r\n            aria-describedby=\"delete-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"delete-dialog-title\">Delete User</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"delete-dialog-description\">\r\n                Are you sure you want to delete user <strong>{userToDelete?.name}</strong>? This action cannot be undone.\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleDeleteCancel} variant=\"outlined\" color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleDeleteConfirm} variant=\"contained\" color=\"error\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}